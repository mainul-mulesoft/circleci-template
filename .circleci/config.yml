version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build with Tests
          #command: mvn clean package
          command: echo "Building"
  
  deploy-dev:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run: echo "Deploying to Dev"

  hold-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run:
          command: echo "Approve Deployment in Test"
  
  deploy-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - when:
          condition:
            equal: [develop, << pipeline.git.branch >>]
          steps:
            - run: echo "Deploying to Test"

  hold-uat:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run:
          command: echo "Approve Deployment in UAT"
  
  deploy-uat:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - when:
          condition:
            or:
              - equal: [develop, << pipeline.git.branch >>]
              - matches:
                  pattern: "hotfix\\/bug-\\d{1,}/gm" 
                  value: << pipeline.git.branch >>
          steps:
            - run: echo "Deploying to UAT"
  
  deploy-prod:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - when:
          condition:
            equal: [main, << pipeline.git.branch >>]
              
          steps:
            - run: echo "Deploying to Prod"
      
      
workflows:
  app-build-test-deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - deploy-dev
      - hold-test:
          type: approval
          requires:
              - build-and-test
              - deploy-dev
      - deploy-test:
          requires:
              - hold-test
      - hold-uat:
          type: approval
          requires:
              - deploy-test
      - deploy-uat:
          requires:
              - hold-uat
      - deploy-prod        

